{"ast":null,"code":"var _jsxFileName = \"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/hom.js\";\nimport React, { Component } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"body\", {\n  children: [/*#__PURE__*/_jsxDEV(\"script\", {\n    src: \"https://www.gstatic.com/firebasejs/8.4.1/firebase-app.js\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n    src: \"https://www.gstatic.com/firebasejs/8.4.1/firebase-firestore.js\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 1\n}, this);\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCmZ272B89syKA0FNLa7ujYHvfI60YB2M0\",\n  authDomain: \"ucsb-polls.firebaseapp.com\",\n  projectId: \"ucsb-polls\",\n  storageBucket: \"ucsb-polls.appspot.com\",\n  messagingSenderId: \"989606767140\",\n  appId: \"1:989606767140:web:cf485612653f0ba2a186b1\",\n  measurementId: \"G-0HG55T6LG9\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar db = firebase.firestore();\n\nclass Poll {\n  constructor(answerable, date, question) {\n    this.answerable = answerable;\n    this.date = date;\n    this.question = question;\n  }\n\n  toString() {\n    return this.answerable + ', ' + this.date + ', ' + this.question;\n  }\n\n} // Firestore data converter\n\n\nvar pollConverter = {\n  toFirestore: function (poll) {\n    return {\n      answerable: poll.answerable,\n      date: poll.date,\n      question: poll.question\n    };\n  },\n  fromFirestore: function (snapshot, options) {\n    const data = snapshot.data(options);\n    return new Poll(data.answerable, data.date, data.question);\n  }\n};\n\nclass HelloMessage extends React.Component {\n  render() {\n    db.collection(\"polls\").doc(\"FFcmP1ZAsVc2eYWNNk9Y\").withConverter(cityConverter).get().then(doc => {\n      if (doc.exists) {\n        // Convert to City object\n        var poll = doc.data(); // Use a City instance method\n\n        console.log(poll.toString());\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(error => {\n      console.log(\"Error getting document:\", error);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hello \", this.props.name, poll.tostring()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default HelloMessage;","map":{"version":3,"sources":["/Users/lzy/1pm-t6-ucsb-poll/myapp/src/hom.js"],"names":["React","Component","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","db","firestore","Poll","constructor","answerable","date","question","toString","pollConverter","toFirestore","poll","fromFirestore","snapshot","options","data","HelloMessage","render","collection","doc","withConverter","cityConverter","get","then","exists","console","log","catch","error","props","name","tostring"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;;;AAIA;AAAA;AAAA,0BACA;AAAQ,IAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,UADA,eAGA;AAAQ,IAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,UAHA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,4BAFK;AAGjBC,EAAAA,SAAS,EAAE,YAHM;AAIjBC,EAAAA,aAAa,EAAE,wBAJE;AAKjBC,EAAAA,iBAAiB,EAAE,cALF;AAMjBC,EAAAA,KAAK,EAAE,2CANU;AAOjBC,EAAAA,aAAa,EAAE;AAPE,CAArB;;AASA,IAAI,CAACR,QAAQ,CAACS,IAAT,CAAcC,MAAnB,EAA2B;AACvBV,EAAAA,QAAQ,CAACW,aAAT,CAAuBV,cAAvB;AACH;;AACD,IAAIW,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAT;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,CAAEC,UAAF,EAAcC,IAAd,EAAoBC,QAApB,EAA+B;AACtC,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKH,UAAL,GAAkB,IAAlB,GAAyB,KAAKC,IAA9B,GAAqC,IAArC,GAA4C,KAAKC,QAAxD;AACH;;AARM,C,CAWX;;;AACA,IAAIE,aAAa,GAAG;AAChBC,EAAAA,WAAW,EAAE,UAASC,IAAT,EAAe;AACxB,WAAO;AACHN,MAAAA,UAAU,EAAEM,IAAI,CAACN,UADd;AAEHC,MAAAA,IAAI,EAAEK,IAAI,CAACL,IAFR;AAGHC,MAAAA,QAAQ,EAAEI,IAAI,CAACJ;AAHZ,KAAP;AAKH,GAPe;AAQhBK,EAAAA,aAAa,EAAE,UAASC,QAAT,EAAmBC,OAAnB,EAA2B;AACtC,UAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcD,OAAd,CAAb;AACA,WAAO,IAAIX,IAAJ,CAASY,IAAI,CAACV,UAAd,EAA0BU,IAAI,CAACT,IAA/B,EAAqCS,IAAI,CAACR,QAA1C,CAAP;AACH;AAXe,CAApB;;AAcA,MAAMS,YAAN,SAA2B7B,KAAK,CAACC,SAAjC,CAA2C;AAEvC6B,EAAAA,MAAM,GAAG;AACLhB,IAAAA,EAAE,CAACiB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,sBAA3B,EACCC,aADD,CACeC,aADf,EAECC,GAFD,GAEOC,IAFP,CAEaJ,GAAD,IAAS;AACnB,UAAIA,GAAG,CAACK,MAAR,EAAe;AACb;AACA,YAAIb,IAAI,GAAGQ,GAAG,CAACJ,IAAJ,EAAX,CAFa,CAGb;;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACH,QAAL,EAAZ;AACD,OALD,MAKO;AACLiB,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AAAC,KAVJ,EAUMC,KAVN,CAUaC,KAAD,IAAW;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCE,KAAvC;AACD,KAZH;AAcF,wBACE;AAAA,2BACS,KAAKC,KAAL,CAAWC,IADpB,EAEGnB,IAAI,CAACoB,QAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAvBsC;;AAyB3C,eAAef,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\n\n<body>\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-app.js\">\n</script>\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-firestore.js\">\n</script>\n</body>\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCmZ272B89syKA0FNLa7ujYHvfI60YB2M0\",\n    authDomain: \"ucsb-polls.firebaseapp.com\",\n    projectId: \"ucsb-polls\",\n    storageBucket: \"ucsb-polls.appspot.com\",\n    messagingSenderId: \"989606767140\",\n    appId: \"1:989606767140:web:cf485612653f0ba2a186b1\",\n    measurementId: \"G-0HG55T6LG9\"\n};\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\nvar db = firebase.firestore();\n\nclass Poll {\n    constructor (answerable, date, question ) {\n        this.answerable = answerable;\n        this.date = date;\n        this.question = question;\n    }\n    toString() {\n        return this.answerable + ', ' + this.date + ', ' + this.question;\n    }\n}\n\n// Firestore data converter\nvar pollConverter = {\n    toFirestore: function(poll) {\n        return {\n            answerable: poll.answerable,\n            date: poll.date,\n            question: poll.question\n            };\n    },\n    fromFirestore: function(snapshot, options){\n        const data = snapshot.data(options);\n        return new Poll(data.answerable, data.date, data.question);\n    }\n};\n\nclass HelloMessage extends React.Component {\n    \n    render() {\n        db.collection(\"polls\").doc(\"FFcmP1ZAsVc2eYWNNk9Y\")\n        .withConverter(cityConverter)\n        .get().then((doc) => {\n          if (doc.exists){\n            // Convert to City object\n            var poll = doc.data();\n            // Use a City instance method\n            console.log(poll.toString());\n          } else {\n            console.log(\"No such document!\");\n          }}).catch((error) => {\n            console.log(\"Error getting document:\", error);\n          }); \n\n      return ( \n        <div>\n          Hello {this.props.name}\n          {poll.tostring()}\n        </div>\n      );\n    }\n}\nexport default HelloMessage;"]},"metadata":{},"sourceType":"module"}
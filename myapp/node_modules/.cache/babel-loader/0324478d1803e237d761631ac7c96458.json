{"ast":null,"code":"var _jsxFileName = \"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/poll/DemoPoll.js\";\nimport React, { Component } from 'react';\nimport styles from './DemoPoll.styles.css'; // style sheets for making polls look nice later\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list = [{\n  id: 1,\n  name: 'Ortega Dining Commons',\n  votes: 0\n}, {\n  id: 2,\n  name: 'Carrillo Dining Commons',\n  votes: 0\n}, {\n  id: 3,\n  name: 'Portola Dining Commons',\n  votes: 0\n}, {\n  id: 4,\n  name: 'De La Guerra Dining Commons',\n  votes: 0\n}]; // potential colors for results\n\nconst themes = {\n  purple: ['#6D4B94', '#7C6497', '#6D4B943B'],\n  red: ['#E23D3D', '#EF4545', '#FF28283B'],\n  blue: ['#5674E0', '#5674E0', '#5674E03B'],\n  black: ['#303030', '#303030', '#3030303B'],\n  white: ['#ffffff', '#ffffff', '#ffffff3B'],\n  cyan: ['#00BCDD', '#00BCDD', '#00BCDD3B']\n};\n\nclass DemoPoll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      members: [],\n      voted: false,\n      // has the user voted?\n      submitted: false,\n      //has the user submitted their vote?\n      totalVotes: 0\n    };\n\n    this.handleEvent = e => console.log('button clicked for ' + e);\n\n    this.handleEvent = memberId => {\n      const updatedList = this.state.members.map(member => {\n        if (member.id === memberId) {\n          return Object.assign({}, member, {\n            votes: member.votes + 1\n          });\n        } else {\n          return member;\n        }\n      });\n      this.setState({\n        members: updatedList,\n        voted: true\n      });\n      const {\n        members\n      } = this.state;\n      const totalVotes = members.reduce((total, member) => total + member.votes, 1); // adds up all the votes\n\n      this.setState({\n        totalVotes: totalVotes\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState({\n        submitted: true\n      });\n    };\n\n    this.calculatePercent = (votes, total) => {\n      if (votes === 0 || total === 0) {\n        return '0%';\n      }\n\n      return `${parseInt(votes / total * 100)}%`;\n    };\n\n    this.obtainColors = customTheme => {\n      const colors = themes[customTheme];\n\n      if (!colors) {\n        return themes['black'];\n      }\n\n      return colors;\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      members: list\n    });\n  }\n\n  render() {\n    const {\n      voted,\n      totalVotes,\n      submitted\n    } = this.state;\n    const colors = this.obtainColors('blue');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [this.state.members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !submitted ? /*#__PURE__*/_jsxDEV(DiningCom, {\n          id: member.id,\n          name: member.name,\n          votes: member.votes,\n          onVote: this.handleEvent\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          style: {\n            color: colors[2],\n            borderColor: colors[1]\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.fill,\n            style: {\n              width: this.calculatePercent(member.votes, totalVotes),\n              backgroundColor: colors[2]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.percent,\n              style: {\n                color: colors[0]\n              },\n              children: this.calculatePercent(member.votes, totalVotes)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.answer,\n              style: {\n                color: colors[0]\n              },\n              children: [\" \", member.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)\n      }, member.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)), voted && !submitted && /*#__PURE__*/_jsxDEV(SubmitButton, {\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.votes,\n        children: `${totalVotes} vote${totalVotes !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass DiningCom extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => this.props.onVote(this.props.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [this.props.name, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 27\n      }, this), \" \", this.props.votes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass SubmitButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => this.props.onSubmit(this.props.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default DemoPoll;","map":{"version":3,"sources":["/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/poll/DemoPoll.js"],"names":["React","Component","styles","list","id","name","votes","themes","purple","red","blue","black","white","cyan","DemoPoll","state","members","voted","submitted","totalVotes","handleEvent","e","console","log","memberId","updatedList","map","member","Object","assign","setState","reduce","total","handleSubmit","calculatePercent","parseInt","obtainColors","customTheme","colors","componentDidMount","render","padding","result","color","borderColor","fill","width","backgroundColor","percent","answer","DiningCom","handleClick","props","onVote","SubmitButton","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport styles from './DemoPoll.styles.css' // style sheets for making polls look nice later\n\nconst list = [\n  {\n    id: 1,\n    name: 'Ortega Dining Commons',\n    votes: 0\n  },\n  {\n    id: 2,\n    name: 'Carrillo Dining Commons',\n    votes: 0\n  },\n  {\n    id: 3,\n    name: 'Portola Dining Commons',\n    votes: 0\n  },\n  {\n    id: 4,\n    name: 'De La Guerra Dining Commons',\n    votes: 0\n  }\n];\n\n// potential colors for results\nconst themes = {\n    purple: ['#6D4B94', '#7C6497', '#6D4B943B'],\n    red: ['#E23D3D', '#EF4545', '#FF28283B'],\n    blue: ['#5674E0', '#5674E0', '#5674E03B'],\n    black: ['#303030', '#303030', '#3030303B'],\n    white: ['#ffffff', '#ffffff', '#ffffff3B'],\n    cyan: ['#00BCDD', '#00BCDD', '#00BCDD3B']\n  }\n\nclass DemoPoll extends Component {\n  state = {\n    members: [],\n    voted: false, // has the user voted?\n    submitted: false, //has the user submitted their vote?\n    totalVotes: 0\n  }\n\n  componentDidMount() {\n    this.setState({ members: list });\n  }\n\n  handleEvent = e => console.log('button clicked for ' + e);\n\n  handleEvent = memberId => {\n    const updatedList = this.state.members.map(member => {\n      if (member.id === memberId) {\n        return Object.assign({}, member, {\n          votes: member.votes + 1,\n        });\n      } else {\n        return member;\n      }\n    });\n    \n\n    this.setState({\n      members: updatedList,\n      voted: true\n    });\n\n\n    const { members } = this.state\n    const totalVotes = members.reduce((total, member) => total + member.votes, 1) // adds up all the votes\n    this.setState({\n        totalVotes: totalVotes\n      });\n\n  };\n\n  handleSubmit = () => {\n    this.setState({\n        submitted: true\n      });\n  }\n\n\n  calculatePercent = (votes, total) => {\n    if (votes === 0 || total === 0) {\n      return '0%'\n    }\n    return `${parseInt((votes / total) * 100)}%`\n  }\n\n\n  // gets color for poll results\n  obtainColors = (customTheme) => { \n    const colors = themes[customTheme]\n    if (!colors) {\n      return themes['black']\n    }\n    return colors\n  }\n\n\n  render() {\n    const { voted, totalVotes, submitted } = this.state\n    const colors = this.obtainColors('blue')\n\n    return (\n        <div style={{padding: 10}}>\n            {this.state.members.map(member => (\n                <div key={member.name}>\n                    {!submitted ? (\n                        <DiningCom key={member.id} id={member.id} name={member.name} votes={member.votes} onVote={this.handleEvent} />\n                    ) : (\n                        <div className={styles.result} style={{ color: colors[2], borderColor: colors[1] }}>\n                          <div className={styles.fill} style={{ width: this.calculatePercent(member.votes, totalVotes), backgroundColor: colors[2] }} />\n                          <div>\n                              <span className={styles.percent} style={{ color: colors[0] }}>{this.calculatePercent(member.votes, totalVotes)}</span>\n                              <span className={styles.answer} style={{ color: colors[0] }}> {member.name}</span>\n                          </div>\n                          \n                        </div>\n                    )}\n                </div>\n            ))}\n            {voted && !submitted &&  <SubmitButton onSubmit={this.handleSubmit} />}\n            <p className={styles.votes}>{`${totalVotes} vote${totalVotes !== 1 ? 's' : ''}`}</p>\n        </div>\n    );\n  }\n\n}\n\n\nclass DiningCom extends Component {\n  handleClick = () => this.props.onVote(this.props.id);\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.name} <button onClick={this.handleClick}>+</button> {this.props.votes}\n      </div>\n    );\n  }\n}\n\nclass SubmitButton extends Component {\n    handleClick = () => this.props.onSubmit(this.props.id);\n    render() {\n      return (\n        <div>\n          <button onClick={this.handleClick}>Submit</button>\n        </div>\n      );\n    }\n}\n\n\nexport default DemoPoll;\n\n"]},"metadata":{},"sourceType":"module"}
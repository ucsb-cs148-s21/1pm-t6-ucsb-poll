{"ast":null,"code":"var _jsxFileName = \"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/NavigationBar.js\";\n//https://react-bootstrap.github.io/components/navbar/\nimport React, { Component, useState } from 'react';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport AuthenticationButton from \"./login/AuthenticationButton\"; //import { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavigationBar({\n  isAdmin,\n  isMember,\n  adminPages\n}) {\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"light\",\n    expand: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n      href: \"#home\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"PollsLogo.png\",\n        width: \"75\",\n        height: \"32\",\n        className: \"d-inline-block align-top\",\n        alt: \"Polls logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        className: \"mr-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), isMember && /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"#profile\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(NavDropdown, {\n          title: \"Admin\",\n          children: adminPages.map(item => /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: item.link,\n            children: [\" \", item.name, \" \"]\n          }, item.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n          title: \"Polls\",\n          id: \"basic-nav-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.1\",\n            children: \"Browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.2\",\n            children: \"Create a poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.3\",\n            children: \"Something\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"#action/3.4\",\n            children: \"Separated link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            placeholder: \"Search for a poll\",\n            className: \"mr-sm-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            onClick: handleOnClick,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        className: \"justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-nav ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(AuthenticationButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n}\n_c = NavigationBar;\n\nconst addNewUser = async _event => {\n  const url = \"/addNewUser\";\n\n  try {\n    const result = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: \"John Smith\",\n        id: \"johnsmith22@temp.com\"\n      })\n    });\n    console.log(`result=${JSON.stringify(result)}`);\n    return result;\n  } catch (err) {\n    console.log(`err=${err}`);\n  }\n};\n\nconst handleOnClick = async e => {\n  e.preventDefault();\n  const answer = await addNewUser(e);\n};\n\nfunction AppNavigationBar() {\n  // const { getAccessTokenSilently: getToken } = useAuth0();\n  // const { isAuthenticated, loginWithRedirect, logout} = useAutho0();\n  // const { data: roleInfo } = useSWR(\n  //   [\"/api/myRole\", getToken],\n  //   fetchWithToken\n  // );\n  // const isAdmin = roleInfo && roleInfo.role.toLowerCase() === \"admin\";\n  // const isMember = roleInfo && roleInfo.role.toLowerCase() === \"member\";\n\n  /* \n      return (\n          <div>\n          {!isAuthenticated && (\n              <button onClick={() => loginWithRedirect({})}>Log in</button>\n          )}\n          {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n          </div>\n      );\n  */\n  const adminPages = [{\n    link: \"/admin\",\n    name: \"Maintain Admins\"\n  }, {\n    link: \"/admin/polls\",\n    name: \"Moderate Polls\"\n  }];\n  return /*#__PURE__*/_jsxDEV(NavigationBar, {\n    isAdmin: true,\n    isMember: true,\n    adminPages: adminPages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 13\n  }, this);\n}\n\n_c2 = AppNavigationBar;\nexport default AppNavigationBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavigationBar\");\n$RefreshReg$(_c2, \"AppNavigationBar\");","map":{"version":3,"sources":["/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/NavigationBar.js"],"names":["React","Component","useState","Navbar","Nav","NavDropdown","Form","FormControl","Button","AuthenticationButton","NavigationBar","isAdmin","isMember","adminPages","map","item","link","name","handleOnClick","addNewUser","_event","url","result","fetch","method","headers","body","JSON","stringify","id","console","log","err","e","preventDefault","answer","AppNavigationBar"],"mappings":"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","sourcesContent":["//https://react-bootstrap.github.io/components/navbar/\n\nimport React, {Component, useState} from 'react';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport AuthenticationButton from \"./login/AuthenticationButton\";\n//import { useAuth0 } from \"@auth0/auth0-react\";\n\n\nexport function NavigationBar ({isAdmin, isMember, adminPages}) {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">\n                    <img\n                        src=\"PollsLogo.png\"\n                        width= \"75\"\n                        height=\"32\"\n                        className=\"d-inline-block align-top\"\n                        alt=\"Polls logo\"\n                    />\n                </Navbar.Brand>                \n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\n                        {isMember && \n                            <Nav.Link href=\"#profile\">Profile</Nav.Link>\n                        }\n                        {isAdmin &&\n                            <NavDropdown title=\"Admin\">\n                            {adminPages.map(item => (\n                                <NavDropdown.Item key={item.name} href={item.link}> {item.name} </NavDropdown.Item>\n                            ))}\n                            </NavDropdown>\n                        }\n                        <NavDropdown title=\"Polls\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Browse</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Create a poll</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                        <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search for a poll\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\" onClick = {handleOnClick}>Search</Button>\n                        </Form>\n                    </Nav>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <div className=\"navbar-nav ml-auto\">\n                            <AuthenticationButton />\n                        </div>\n                    </Navbar.Collapse>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n\n    \n}\n\nconst addNewUser = async (_event) => {\n    const url = \"/addNewUser\";\n\n    try {\n        const result = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: \"John Smith\",\n                id: \"johnsmith22@temp.com\",\n            }),\n        });\n        console.log(`result=${JSON.stringify(result)}`)\n        return result;\n    } catch (err) {\n        console.log(`err=${err}`)\n    }\n};\n\nconst handleOnClick = async (e) => {\n    e.preventDefault();\n    const answer = await addNewUser(e);\n}\n\n\n\n\nfunction AppNavigationBar() {\n    // const { getAccessTokenSilently: getToken } = useAuth0();\n    // const { isAuthenticated, loginWithRedirect, logout} = useAutho0();\n    // const { data: roleInfo } = useSWR(\n    //   [\"/api/myRole\", getToken],\n    //   fetchWithToken\n    // );\n    // const isAdmin = roleInfo && roleInfo.role.toLowerCase() === \"admin\";\n    // const isMember = roleInfo && roleInfo.role.toLowerCase() === \"member\";\n\n\n\n    /* \n        return (\n            <div>\n            {!isAuthenticated && (\n                <button onClick={() => loginWithRedirect({})}>Log in</button>\n            )}\n            {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n            </div>\n        );\n    */\n    const adminPages = [\n        {link:\"/admin\", name:\"Maintain Admins\",},\n        {link:\"/admin/polls\", name:\"Moderate Polls\",},\n      ];\n    return (<NavigationBar isAdmin={true} isMember={true} adminPages = {adminPages}/>);\n\n}\n\n\nexport default AppNavigationBar;"]},"metadata":{},"sourceType":"module"}
[{"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/index.js":"1","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/reportWebVitals.js":"2","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/App.js":"3","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/auth/auth0-provider-with-history.js":"4","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/hom.js":"5","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/NavigationBar.js":"6","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/poll/DemoPoll.js":"7","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/login/AuthenticationButton.js":"8","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/login/LoginButton.js":"9","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/login/LogoutButton.js":"10"},{"size":825,"mtime":1619488609434,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1619488609434,"results":"13","hashOfConfig":"12"},{"size":8524,"mtime":1619498595981,"results":"14","hashOfConfig":"12"},{"size":747,"mtime":1619488591634,"results":"15","hashOfConfig":"12"},{"size":1136,"mtime":1619498706218,"results":"16","hashOfConfig":"12"},{"size":4333,"mtime":1619488591634,"results":"17","hashOfConfig":"12"},{"size":3977,"mtime":1619488591634,"results":"18","hashOfConfig":"12"},{"size":429,"mtime":1619488591634,"results":"19","hashOfConfig":"12"},{"size":325,"mtime":1619488591634,"results":"20","hashOfConfig":"12"},{"size":375,"mtime":1619488591634,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"yq4bzx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/index.js",[],["44","45"],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/reportWebVitals.js",[],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/App.js",["46","47","48","49","50","51","52","53","54"],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/auth/auth0-provider-with-history.js",[],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/hom.js",["55"],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/NavigationBar.js",["56","57","58"],"//https://react-bootstrap.github.io/components/navbar/\n\nimport React, {Component, useState} from 'react';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\nimport AuthenticationButton from \"./login/AuthenticationButton\";\n//import { useAuth0 } from \"@auth0/auth0-react\";\n\n\nexport function NavigationBar ({isAdmin, isMember, adminPages}) {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">\n                    <img\n                        src=\"PollsLogo.png\"\n                        width= \"75\"\n                        height=\"32\"\n                        className=\"d-inline-block align-top\"\n                        alt=\"Polls logo\"\n                    />\n                </Navbar.Brand>                \n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#home\">Home</Nav.Link>\n                        {isMember && \n                            <Nav.Link href=\"#profile\">Profile</Nav.Link>\n                        }\n                        {isAdmin &&\n                            <NavDropdown title=\"Admin\">\n                            {adminPages.map(item => (\n                                <NavDropdown.Item key={item.name} href={item.link}> {item.name} </NavDropdown.Item>\n                            ))}\n                            </NavDropdown>\n                        }\n                        <NavDropdown title=\"Polls\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Browse</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Create a poll</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                        <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search for a poll\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\" onClick = {handleOnClick}>Search</Button>\n                        </Form>\n                    </Nav>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <div className=\"navbar-nav ml-auto\">\n                            <AuthenticationButton />\n                        </div>\n                    </Navbar.Collapse>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n\n    \n}\n\nconst addNewUser = async (_event) => {\n    const url = \"/addNewUser\";\n\n    try {\n        const result = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name: \"John Smith\",\n                id: \"johnsmith22@temp.com\",\n            }),\n        });\n        console.log(`result=${JSON.stringify(result)}`)\n        return result;\n    } catch (err) {\n        console.log(`err=${err}`)\n    }\n};\n\nconst handleOnClick = async (e) => {\n    e.preventDefault();\n    const answer = await addNewUser(e);\n}\n\n\n\n\nfunction AppNavigationBar() {\n    // const { getAccessTokenSilently: getToken } = useAuth0();\n    // const { isAuthenticated, loginWithRedirect, logout} = useAutho0();\n    // const { data: roleInfo } = useSWR(\n    //   [\"/api/myRole\", getToken],\n    //   fetchWithToken\n    // );\n    // const isAdmin = roleInfo && roleInfo.role.toLowerCase() === \"admin\";\n    // const isMember = roleInfo && roleInfo.role.toLowerCase() === \"member\";\n\n\n\n    /* \n        return (\n            <div>\n            {!isAuthenticated && (\n                <button onClick={() => loginWithRedirect({})}>Log in</button>\n            )}\n            {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n            </div>\n        );\n    */\n    const adminPages = [\n        {link:\"/admin\", name:\"Maintain Admins\",},\n        {link:\"/admin/polls\", name:\"Moderate Polls\",},\n      ];\n    return (<NavigationBar isAdmin={true} isMember={true} adminPages = {adminPages}/>);\n\n}\n\n\nexport default AppNavigationBar;","/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/poll/DemoPoll.js",[],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/login/AuthenticationButton.js",[],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/login/LoginButton.js",[],"/Users/lzy/1pm-t6-ucsb-poll/myapp/src/components/login/LogoutButton.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":23,"column":13,"nodeType":"65","messageId":"66","endLine":23,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":64,"column":19,"nodeType":"69","endLine":64,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":80,"column":19,"nodeType":"69","endLine":80,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":96,"column":19,"nodeType":"69","endLine":96,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":112,"column":19,"nodeType":"69","endLine":112,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":147,"column":13,"nodeType":"69","endLine":147,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":177,"column":19,"nodeType":"69","endLine":177,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":193,"column":19,"nodeType":"69","endLine":193,"endColumn":55},{"ruleId":"67","severity":1,"message":"68","line":241,"column":13,"nodeType":"69","endLine":241,"endColumn":49},{"ruleId":"63","severity":1,"message":"70","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"70","line":3,"column":16,"nodeType":"65","messageId":"66","endLine":3,"endColumn":25},{"ruleId":"63","severity":1,"message":"71","line":3,"column":27,"nodeType":"65","messageId":"66","endLine":3,"endColumn":35},{"ruleId":"63","severity":1,"message":"72","line":82,"column":11,"nodeType":"65","messageId":"66","endLine":82,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'useState' is defined but never used.","'answer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]